<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{86FEB169-3393-3EA8-807E-DCC4836C0970}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>yaml-cpp-tests</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\test\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">yaml-cpp-tests.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">yaml-cpp-tests</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\test\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">yaml-cpp-tests.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">yaml-cpp-tests</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\test\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">yaml-cpp-tests.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">yaml-cpp-tests</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\test\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">yaml-cpp-tests.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">yaml-cpp-tests</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\src;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googletest/include" /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googlemock/include" /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googlemock" /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googletest"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\src;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\src;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\Debug\yaml-cppd.lib;..\lib\Debug\gmockd.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build/test/Debug/yaml-cpp-tests.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build/test/Debug/yaml-cpp-tests.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\src;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googletest/include" /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googlemock/include" /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googlemock" /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googletest"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\src;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\src;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\Release\yaml-cpp.lib;..\lib\Release\gmock.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build/test/Release/yaml-cpp-tests.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build/test/Release/yaml-cpp-tests.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\src;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googletest/include" /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googlemock/include" /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googlemock" /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googletest"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\src;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\src;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\MinSizeRel\yaml-cpp.lib;..\lib\MinSizeRel\gmock.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build/test/MinSizeRel/yaml-cpp-tests.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build/test/MinSizeRel/yaml-cpp-tests.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\src;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googletest/include" /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googlemock/include" /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googlemock" /external:I "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/gtest-1.10.0/googletest"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\src;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\src;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock\include;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googlemock;D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\gtest-1.10.0\googletest;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\RelWithDebInfo\yaml-cpp.lib;..\lib\RelWithDebInfo\gmock.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build/test/RelWithDebInfo/yaml-cpp-tests.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build/test/RelWithDebInfo/yaml-cpp-tests.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"F:\Program Files\CMake\bin\cmake.exe" "-SD:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0" "-BD:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build" --check-stamp-file "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build/test/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\CMakeFiles\cmake.verify_globs;F:\Program Files\CMake\share\cmake-3.25\Modules\CheckCXXSourceCompiles.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\CheckIncludeFileCXX.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\CheckLibraryExists.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\FindPackageHandleStandardArgs.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\FindPackageMessage.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\FindThreads.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\test\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"F:\Program Files\CMake\bin\cmake.exe" "-SD:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0" "-BD:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build" --check-stamp-file "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build/test/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\CMakeFiles\cmake.verify_globs;F:\Program Files\CMake\share\cmake-3.25\Modules\CheckCXXSourceCompiles.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\CheckIncludeFileCXX.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\CheckLibraryExists.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\FindPackageHandleStandardArgs.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\FindPackageMessage.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\FindThreads.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\test\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"F:\Program Files\CMake\bin\cmake.exe" "-SD:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0" "-BD:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build" --check-stamp-file "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build/test/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\CMakeFiles\cmake.verify_globs;F:\Program Files\CMake\share\cmake-3.25\Modules\CheckCXXSourceCompiles.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\CheckIncludeFileCXX.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\CheckLibraryExists.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\FindPackageHandleStandardArgs.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\FindPackageMessage.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\FindThreads.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\test\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/test/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"F:\Program Files\CMake\bin\cmake.exe" "-SD:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0" "-BD:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build" --check-stamp-file "D:/Repository/2022/C++/yaml-cpp-yaml-cpp-0.7.0 (2)/yaml-cpp-yaml-cpp-0.7.0/build/test/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\CMakeFiles\cmake.verify_globs;F:\Program Files\CMake\share\cmake-3.25\Modules\CheckCXXSourceCompiles.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\CheckIncludeFileCXX.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\CheckLibraryExists.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\FindPackageHandleStandardArgs.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\FindPackageMessage.cmake;F:\Program Files\CMake\share\cmake-3.25\Modules\FindThreads.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\test\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration\emitter_test.cpp" />
    <ClCompile Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration\encoding_test.cpp" />
    <ClCompile Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration\error_messages_test.cpp" />
    <ClCompile Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration\gen_emitter_test.cpp" />
    <ClCompile Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration\handler_spec_test.cpp" />
    <ClCompile Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration\handler_test.cpp" />
    <ClCompile Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration\load_node_test.cpp" />
    <ClCompile Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\integration\node_spec_test.cpp" />
    <ClCompile Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\main.cpp" />
    <ClCompile Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\node\node_test.cpp" />
    <ClCompile Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\ostream_wrapper_test.cpp" />
    <ClCompile Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\parser_test.cpp" />
    <ClCompile Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\test\regex_test.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\ZERO_CHECK.vcxproj">
      <Project>{1686E2AF-7F2F-3F5E-848C-2AE6F8B7B534}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\test\prefix\googlemock\gmock.vcxproj">
      <Project>{3B0A3E2C-7CA6-33D1-ABFF-70D5A5614ED2}</Project>
      <Name>gmock</Name>
    </ProjectReference>
    <ProjectReference Include="D:\Repository\2022\C++\yaml-cpp-yaml-cpp-0.7.0 (2)\yaml-cpp-yaml-cpp-0.7.0\build\yaml-cpp.vcxproj">
      <Project>{999BE5C2-6C88-3508-893E-E869F511A9E7}</Project>
      <Name>yaml-cpp</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>